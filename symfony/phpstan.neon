parameters:
  level: 10
  paths:
    - migrations
    - src
    - tests

  doctrine:
    objectManagerLoader: tests/object-manager.php
  symfony:
    consoleApplicationLoader: tests/console-application.php

  typeAliases:
    psPhpFieldValue:  'App\Data\Definitions\Ages|App\Data\Definitions\ContactPermit|DateTimeImmutable|list<string>|string|int|bool|null'
    psJsonFieldsData: 'array<string, list<string>|string|int|bool|null>'
    psFixerConfig:    'array{replacements: array<string, string>, regex_prefix: string, regex_suffix: string}'

  ignoreErrors:
    -
      message: '#^Method App\\Controller\\[^ ]+ has parameter \$form with generic interface Symfony\\Component\\Form\\FormInterface but does not specify its types\: TData$#'
      identifier: missingType.generics
      count: 8
      path: src/Controller/*

    -
      message: '#^Class App\\Form\\[^ ]+ extends generic class Symfony\\Component\\Form\\AbstractType but does not specify its types\: TData$#'
      identifier: missingType.generics
      count: 5
      path: src/Form/*

    -
      message: '#^Class App\\Repository\\[^ ]+ has PHPDoc tag @method for method findBy\(\) parameter \#1 \$criteria with no value type specified in iterable type array\.$#'
      identifier: missingType.iterableValue
      count: 12
      path: src/Repository/*

    -
      message: '#^Class App\\Repository\\[^ ]+ has PHPDoc tag @method for method findBy\(\) parameter \#2 \$orderBy with no value type specified in iterable type array\.$#'
      identifier: missingType.iterableValue
      count: 12
      path: src/Repository/*

    -
      message: '#^Class App\\Repository\\[^ ]+ has PHPDoc tag @method for method findOneBy\(\) parameter \#1 \$criteria with no value type specified in iterable type array\.$#'
      identifier: missingType.iterableValue
      count: 12
      path: src/Repository/*

    -
      message: '#^Class App\\Repository\\[^ ]+ has PHPDoc tag @method for method findOneBy\(\) parameter \#2 \$orderBy with no value type specified in iterable type array\.$#'
      identifier: missingType.iterableValue
      count: 12
      path: src/Repository/*

    - # This is from a recipe
      message: '#^Call to function method_exists\(\) with ''Symfony\\\\Component\\\\Dotenv\\\\Dotenv'' and ''bootEnv'' will always evaluate to true\.$#'
      identifier: function.alreadyNarrowedType
      count: 1
      path: tests/bootstrap.php

    - # "Using this method is the best way to get a container from your test code."
      message: '#^Call to method get\(\) of internal class Symfony\\Bundle\\FrameworkBundle\\Test\\TestContainer from outside its root namespace Symfony\.$#'
      identifier: method.internalClass
      count: 2
      path: tests/*.php

includes:
  - vendor/phpstan/phpstan/conf/bleedingEdge.neon
