# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

imports:
    - { resource: data_definitions/*.yaml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $contactEmail:                    '%env(resolve:CONTACT_EMAIL)%'
            $countries:                       '%countries%'
            $currencies:                      '%currencies%'
            $languages:                       '%languages%'
            $lists:                           '%lists%'
            $noPayPlans:                      '%noPayPlans%'
            $paymentMethods:                  '%paymentMethods%'
            $projectDir:                      '%kernel.project_dir%'
            $speciesDefinitions:              '%species_definitions%'
            $states:                          '%states%'
            $strings:                         '%strings%'
            $urls:                            '%urls%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Doctrine\EntityManagerDecorator:
        decorates: 'doctrine.orm.default_entity_manager'

    App\Event\DisrespectfulLegacyScraper:
        tags:
          - { name: 'kernel.event_subscriber' }

    App\Event\Doctrine\PostFlushSubscriber:
        tags:
            - { name: 'doctrine.event_subscriber' }
        arguments:
            - '@cache.app'

    App\Event\Doctrine\ArtisanListener:
        tags:
            - name: 'doctrine.orm.entity_listener'
              event: 'preFlush'
              entity: 'App\Entity\Artisan'
              lazy: true

    App\Event\Doctrine\ArtisanUrlListener:
        tags:
            - name: 'doctrine.orm.entity_listener'
              event: 'preUpdate'
              entity: 'App\Entity\ArtisanUrl'
              lazy: true
